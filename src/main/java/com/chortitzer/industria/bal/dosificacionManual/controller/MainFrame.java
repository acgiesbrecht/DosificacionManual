/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.chortitzer.industria.bal.dosificacionManual.controller;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.matchers.TextMatcherEditor;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import com.chortitzer.industria.bal.dosificacionManual.domain.Dcaptura;
import com.chortitzer.industria.bal.dosificacionManual.domain.Formulas;
import com.chortitzer.industria.bal.dosificacionManual.domain.Tareaseje;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author giesbrecht
 */
public class MainFrame extends javax.swing.JFrame {

    DatePickerSettings dps = new DatePickerSettings();
    TimePickerSettings tps = new TimePickerSettings();

    /**
     * Creates new form jfrmMain
     */
    public MainFrame() {
        dps.setFormatForDatesCommonEra("dd/MM/yyyy");

        tps.setFormatForDisplayTime("HH:mm:ss");
        tps.setFormatForMenuTimes("HH:mm:ss");
        tps.setDisplayToggleTimeMenuButton(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("com.chortitzer.industria.bal_DosificacionManual_jar_2.0PU").createEntityManager();
        queryFormulas = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("Select t FROM Formulas t");
        listFormulas = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryFormulas.getResultList());
        cboFormula = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblProducto = new javax.swing.JTable();
        cmdCancel = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        jspCiclos = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        dtpFecha = new com.github.lgooddatepicker.components.DateTimePicker(dps, tps);
        jLabel2 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jXTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cboFormula.setEditable(true);
        cboFormula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFormulaActionPerformed(evt);
            }
        });

        jLabel1.setText("Formula");

        jtblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tolva", "Producto", "Peso por Ciclo", "Peso Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblProducto.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jtblProducto);
        jtblProducto.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jtblProducto.getColumnModel().getColumnCount() > 0) {
            jtblProducto.getColumnModel().getColumn(1).setMinWidth(60);
            jtblProducto.getColumnModel().getColumn(1).setPreferredWidth(60);
            jtblProducto.getColumnModel().getColumn(1).setMaxWidth(60);
            jtblProducto.getColumnModel().getColumn(2).setPreferredWidth(50);
            jtblProducto.getColumnModel().getColumn(3).setMinWidth(110);
            jtblProducto.getColumnModel().getColumn(3).setPreferredWidth(110);
            jtblProducto.getColumnModel().getColumn(3).setMaxWidth(110);
        }

        cmdCancel.setText("Cancelar");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        cmdSave.setText("Guardar");
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        jspCiclos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jspCiclosStateChanged(evt);
            }
        });

        jLabel4.setText("Cantidad de Ciclos");

        jLabel2.setText("Fecha/Hora");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jspCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdSave, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboFormula, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dtpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboFormula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jspCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        dtpFecha.setDateTimeStrict(LocalDateTime.now());

        AutoCompleteSupport support = AutoCompleteSupport.install(
                this.cboFormula, GlazedLists.eventListOf(listFormulas.toArray()));
        support.setFilterMode(TextMatcherEditor.CONTAINS);
    }//GEN-LAST:event_formWindowOpened

    private void loadFormula() {
        try {
            Formulas f = (Formulas) cboFormula.getSelectedItem();
            List<Object[]> listProductos = entityManager.createQuery("select p.nroID, p.dos1, p.nombre, d.set from Productox p, Datosx d where p.nroID = d.idp and d.idf = " + f.getNroID().toString()).getResultList();
            DefaultTableModel model = (DefaultTableModel) jtblProducto.getModel();
            model.setRowCount(0);
            for (Object[] o : listProductos) {
                model.addRow(new Object[]{o[0], o[1], o[2], (Double) o[3], (Double) o[3] * (Integer) jspCiclos.getValue()});
            }
            jtblProducto.setModel(model);
        } catch (Exception e) {
            MessageBox(e.getMessage());
        }
    }

    private void cboFormulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFormulaActionPerformed
        try {
            if (cboFormula.getSelectedIndex() > -1) {
                jspCiclos.setValue(1);
                loadFormula();
            }
        } catch (Exception e) {
            MessageBox(e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cboFormulaActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        try {
            if (cboFormula.getSelectedIndex() > -1 && jtblProducto.getRowCount() > 0) {
                Tareaseje tarea = new Tareaseje();

                Integer s = 1;

                Formulas f = (Formulas) cboFormula.getSelectedItem();

                //tarea.setNroID(1);
                tarea.setCicloE(s);
                tarea.setDestino("INTERNO");
                tarea.setEje(0);
                tarea.setIdd(0);
                tarea.setIdop(0);
                tarea.setKva(0.0);
                tarea.setSetT(0.0);
                tarea.setSetE(0.0);
                tarea.setTiempo(Date.from(dtpFecha.getDateTimePermissive().toLocalDate().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                tarea.setTurno(s);
                tarea.setFecha(Date.from(dtpFecha.getDateTimePermissive().toLocalDate().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                tarea.setHora(Date.from(dtpFecha.getDateTimePermissive().atZone(ZoneId.systemDefault()).toInstant()));
                tarea.setCiclos(s);
                tarea.setLote(999);
                tarea.setIdf(f.getNroID());

                entityManager.getTransaction().begin();
                entityManager.persist(tarea);
                entityManager.getTransaction().commit();

                int lastTarea = (int) entityManager.createQuery("select max(t.nroID) from Tareaseje t").getSingleResult();
                System.out.print(lastTarea);
                if (lastTarea > 0) {
                    entityManager.getTransaction().begin();

                    DefaultTableModel dtm = (DefaultTableModel) jtblProducto.getModel();
                    int nRow = dtm.getRowCount();

                    for (int i = 0; i < nRow; i++) {
                        Dcaptura pesaje = new Dcaptura();
                        pesaje.setIdt(lastTarea);
                        pesaje.setCiclo(1);
                        pesaje.setItem(i + 1);
                        pesaje.setPlata(0);
                        pesaje.setEmax(0.0);
                        pesaje.setIdstock(999);
                        pesaje.setFrango(0);
                        pesaje.setIdp((int) dtm.getValueAt(i, 0));
                        pesaje.setSetT((Double) dtm.getValueAt(i, 4));
                        pesaje.setValor((Double) dtm.getValueAt(i, 4));
                        entityManager.persist(pesaje);
                    }
                    entityManager.getTransaction().commit();
                    MessageBox("Guardado Tarea N° " + lastTarea);
                }
                cboFormula.setSelectedIndex(-1);
                DefaultTableModel model = (DefaultTableModel) jtblProducto.getModel();
                model.setRowCount(0);
                jtblProducto.setModel(model);
                cboFormula.requestFocus();

            }
        } catch (Exception e) {
            MessageBox(e.getMessage());
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        cboFormula.setSelectedIndex(-1);
        DefaultTableModel model = (DefaultTableModel) jtblProducto.getModel();
        model.setRowCount(0);
        jtblProducto.setModel(model);
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void jspCiclosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jspCiclosStateChanged
        loadFormula();
    }//GEN-LAST:event_jspCiclosStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             SystentityManager.out.println(info.getName());
             if ("Nimbus".equals(info.getName())) {
             javax.swing.UIManager.setLookAndFeel(info.getClassName());
             break;
             }*/
            UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            UIManager.put("Button.defaultButtonFollowsFocus", Boolean.TRUE);

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public void MessageBox(String s) {
        JOptionPane.showMessageDialog(new JFrame(), s, "Dialog",
                JOptionPane.INFORMATION_MESSAGE);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboFormula;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdSave;
    private com.github.lgooddatepicker.components.DateTimePicker dtpFecha;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JSpinner jspCiclos;
    private javax.swing.JTable jtblProducto;
    private java.util.List listFormulas;
    private javax.persistence.Query queryFormulas;
    // End of variables declaration//GEN-END:variables
}
